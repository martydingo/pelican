apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ .Release.Name }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}
        app.kubernetes.io/name: pelican
    spec:
      containers:
        - image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          command: ['bash', '-c', '/docker-entrypoint.sh']
          imagePullPolicy: {{ .Values.image.imagePullPolicy }}
          name: {{ .Release.Name }}
          env:
            - name: "PROJECT" 
              value: {{ .Values.pelican.project }} 
          # securityContext:
          #   privileged: true
          #   runAsUser: 0
          ports:
            - containerPort: 8000
              name: http
          volumeMounts:
            - mountPath: /projects
              name: vol-projects-{{ .Release.Name }}
            - mountPath: /www
              name: vol-www-{{ .Release.Name }}
          resources:
            requests:
              memory: {{ .Values.resources.requests.memory }}
              cpu: {{ .Values.resources.requests.cpu }}
            limits:
              memory: {{ .Values.resources.limits.memory }}
              cpu: {{ .Values.resources.limits.cpu }}
      volumes:
        - name: vol-projects-{{ .Release.Name }}
          persistentVolumeClaim:
            claimName: {{ .Values.storage.projects.persistentVolumeClaimName }}
        - name: vol-www-{{ .Release.Name }}
          persistentVolumeClaim:
            claimName: {{ .Values.storage.www.persistentVolumeClaimName }}
